apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8slocalstoragerequiresafetoevict
spec:
  crd:
    spec:
      names:
        kind: K8sLocalStorageRequireSafeToEvict
      validation:
        openAPIV3Schema:
          type: object
          properties:
            annotations:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8slocalstoragerequiresafetoevict

        to_set(arr) = newSet {
          newSet = {x | x := arr[_]}
        }

        is_required_annotation(x, k) {
          _ = x[k]
        }

        flatten_map(obj) = annotations {
          keyVals := [s | s = key; val = obj[key]]
          keysStr := concat(",", keyVals)
          annotations := split(keysStr, ",")
        }

        violation[{"msg": msg}] {
          providedAnnotation := flatten_map(input.review.object.metadata.annotations)[_]
          requiredAnnotation := to_set(input.parameters.annotations)
          is_required_annotation(requiredAnnotation, providedAnnotation)
          msg := sprintf("Pod %v is using local storage but doesn't have the required annotation for eviction safety", [requiredAnnotation])
        }